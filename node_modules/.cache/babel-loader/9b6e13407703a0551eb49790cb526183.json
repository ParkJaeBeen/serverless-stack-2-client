{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\program_pc\\\\serverless-stack-2-client\\\\src\\\\containers\\\\Login.js\";\nimport React, { useState } from \"react\";\nimport { Button, FormGroup, FormControl, ControlLabel } from \"react-bootstrap\";\nimport \"./Login.css\";\nimport { Auth } from \"aws-amplify\";\nimport { useAppContext } from \"../libs/contextLib\";\nimport { useFormFields } from \"../libs/hooksLib\";\nimport { useHistory } from \"react-router-dom\";\nimport LoaderButton from \"../components/LoaderButton\";\nimport { onError } from \"../libs/errorLib\";\nexport default function Login() {\n  const history = useHistory();\n  const [isLoading, setIsLoading] = useState(false);\n  const {\n    userHasAuthenticated\n  } = useAppContext();\n  const [fields, handleFieldChange] = useFormFields({\n    email: \"\",\n    password: \"\"\n  });\n\n  function validateForm() {\n    return email.length > 0 && password.length > 0;\n  }\n\n  async function handleSubmit(event) {\n    event.preventDefault();\n    setIsLoading(true);\n\n    try {\n      await Auth.signIn(email, password);\n      userHasAuthenticated(true);\n      alert(\"Logged in\");\n      history.push(\"/\");\n    } catch (e) {\n      onError(e);\n      setIsLoading(false);\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    controlId: \"email\",\n    bsSize: \"large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ControlLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  }, \"Email\"), /*#__PURE__*/React.createElement(FormControl, {\n    autoFocus: true,\n    type: \"email\",\n    value: email,\n    onChange: e => setEmail(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    controlId: \"password\",\n    bsSize: \"large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ControlLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(FormControl, {\n    value: password,\n    onChange: e => setPassword(e.target.value),\n    type: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(LoaderButton, {\n    block: true,\n    type: \"submit\",\n    bsSize: \"large\",\n    isLoading: isLoading,\n    disabled: !validateForm(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, \"Login\")));\n}","map":{"version":3,"sources":["C:/Users/program_pc/serverless-stack-2-client/src/containers/Login.js"],"names":["React","useState","Button","FormGroup","FormControl","ControlLabel","Auth","useAppContext","useFormFields","useHistory","LoaderButton","onError","Login","history","isLoading","setIsLoading","userHasAuthenticated","fields","handleFieldChange","email","password","validateForm","length","handleSubmit","event","preventDefault","signIn","alert","push","e","setEmail","target","value","setPassword"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Button, FormGroup, FormControl, ControlLabel } from \"react-bootstrap\";\r\nimport \"./Login.css\";\r\nimport { Auth } from \"aws-amplify\";\r\nimport { useAppContext } from \"../libs/contextLib\";\r\nimport { useFormFields } from \"../libs/hooksLib\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport LoaderButton from \"../components/LoaderButton\";\r\nimport { onError } from \"../libs/errorLib\";\r\n\r\nexport default function Login() {\r\n  const history = useHistory();\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const { userHasAuthenticated } = useAppContext();\r\n  const [fields, handleFieldChange] = useFormFields({\r\n    email: \"\",\r\n    password: \"\"\r\n  });\r\n\r\n  function validateForm() {\r\n    return email.length > 0 && password.length > 0;\r\n  }\r\n\r\n  async function handleSubmit(event) {\r\n    event.preventDefault();\r\n    setIsLoading(true);\r\n    try {\r\n      await Auth.signIn(email, password);\r\n      userHasAuthenticated(true);\r\n      alert(\"Logged in\");\r\n      history.push(\"/\");\r\n    } catch (e) {\r\n      onError(e);\r\n      setIsLoading(false);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"Login\">\r\n      <form onSubmit={handleSubmit}>\r\n        <FormGroup controlId=\"email\" bsSize=\"large\">\r\n          <ControlLabel>Email</ControlLabel>\r\n          <FormControl\r\n            autoFocus\r\n            type=\"email\"\r\n            value={email}\r\n            onChange={e => setEmail(e.target.value)}\r\n          />\r\n        </FormGroup>\r\n        <FormGroup controlId=\"password\" bsSize=\"large\">\r\n          <ControlLabel>Password</ControlLabel>\r\n          <FormControl\r\n            value={password}\r\n            onChange={e => setPassword(e.target.value)}\r\n            type=\"password\"\r\n          />\r\n        </FormGroup>\r\n        <LoaderButton\r\n          block\r\n          type=\"submit\"\r\n          bsSize=\"large\"\r\n          isLoading={isLoading}\r\n          disabled={!validateForm()}\r\n        >\r\n          Login\r\n        </LoaderButton>\r\n      </form>\r\n    </div>\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}