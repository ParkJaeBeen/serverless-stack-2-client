{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\program_pc\\\\serverless-stack-2-client\\\\src\\\\App.js\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Nav, Navbar, NavItem } from \"react-bootstrap\";\nimport \"./App.css\";\nimport Routes from \"./Routes\";\nimport { AppContext } from \"./libs/contextLib\";\nimport { Auth } from \"aws-amplify\";\n\nfunction App(Props) {\n  const [isAuthenticating, setIsAuthenticating] = useState(true);\n  const [isAuthenticated, userHasAuthenticated] = useState(false);\n  useEffect(() => {\n    onLoad();\n  }, []);\n\n  async function onLoad() {\n    try {\n      await Auth.currentSession();\n      userHasAuthenticated(true);\n    } catch (e) {\n      if (e !== 'No current user') {\n        alert(e);\n      }\n    }\n\n    setIsAuthenticating(false);\n  }\n\n  function handleLogout() {\n    userHasAuthenticated(false);\n  }\n\n  ;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Navbar, {\n    fluid: true,\n    collapseOnSelect: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Navbar.Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Navbar.Brand, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }, \"Scratch\")), /*#__PURE__*/React.createElement(Navbar.Toggle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Navbar.Collapse, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Nav, {\n    pullRight: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }, isAuthenticated ? /*#__PURE__*/React.createElement(NavItem, {\n    onClick: handleLogout,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }\n  }, \"Logout\") : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(LinkContainer, {\n    to: \"/signup\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(NavItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 19\n    }\n  }, \"Signup\")), /*#__PURE__*/React.createElement(LinkContainer, {\n    to: \"/login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(NavItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 19\n    }\n  }, \"Login\")))))), /*#__PURE__*/React.createElement(AppContext.Provider, {\n    value: {\n      isAuthenticated,\n      userHasAuthenticated\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Routes, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  })));\n}\n\n;\nexport default App;","map":{"version":3,"sources":["C:/Users/program_pc/serverless-stack-2-client/src/App.js"],"names":["LinkContainer","React","useState","Link","Nav","Navbar","NavItem","Routes","AppContext","Auth","App","Props","isAuthenticating","setIsAuthenticating","isAuthenticated","userHasAuthenticated","useEffect","onLoad","currentSession","e","alert","handleLogout"],"mappings":";AAAA,SAASA,aAAT,QAA8B,wBAA9B;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,GAAT,EAAcC,MAAd,EAAsBC,OAAtB,QAAqC,iBAArC;AACA,OAAO,WAAP;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAASC,UAAT,QAA2B,mBAA3B;AACA,SAASC,IAAT,QAAqB,aAArB;;AAEA,SAASC,GAAT,CAAaC,KAAb,EAAoB;AAClB,QAAM,CAACC,gBAAD,EAAmBC,mBAAnB,IAA0CX,QAAQ,CAAC,IAAD,CAAxD;AACA,QAAM,CAACY,eAAD,EAAkBC,oBAAlB,IAA0Cb,QAAQ,CAAC,KAAD,CAAxD;AAEAc,EAAAA,SAAS,CAAC,MAAM;AACdC,IAAAA,MAAM;AACP,GAFQ,EAEN,EAFM,CAAT;;AAIA,iBAAeA,MAAf,GAAwB;AACtB,QAAI;AACF,YAAMR,IAAI,CAACS,cAAL,EAAN;AACAH,MAAAA,oBAAoB,CAAC,IAAD,CAApB;AACD,KAHD,CAIA,OAAMI,CAAN,EAAS;AACP,UAAIA,CAAC,KAAK,iBAAV,EAA6B;AAC3BC,QAAAA,KAAK,CAACD,CAAD,CAAL;AACD;AACF;;AAEDN,IAAAA,mBAAmB,CAAC,KAAD,CAAnB;AACD;;AAED,WAASQ,YAAT,GAAwB;AACtBN,IAAAA,oBAAoB,CAAC,KAAD,CAApB;AACD;;AAAA;AAED,sBACE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,KAAK,MAAb;AAAc,IAAA,gBAAgB,MAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD,CAAQ,MAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD,CAAQ,KAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,CADF,eAIE,oBAAC,MAAD,CAAQ,MAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CADF,eAOE,oBAAC,MAAD,CAAQ,QAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAK,IAAA,SAAS,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,eAAe,gBACZ,oBAAC,OAAD;AAAS,IAAA,OAAO,EAAEO,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADY,gBAEZ,uDACA,oBAAC,aAAD;AAAe,IAAA,EAAE,EAAC,SAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,CADA,eAIA,oBAAC,aAAD;AAAe,IAAA,EAAE,EAAC,QAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,CAJA,CAHN,CADF,CAPF,CADF,eAwBE,oBAAC,UAAD,CAAY,QAAZ;AAAqB,IAAA,KAAK,EAAE;AAAEP,MAAAA,eAAF;AAAmBC,MAAAA;AAAnB,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAxBF,CADF;AA8BD;;AAAA;AAED,eAAeL,GAAf","sourcesContent":["import { LinkContainer } from \"react-router-bootstrap\";\r\nimport React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Nav, Navbar, NavItem } from \"react-bootstrap\";\r\nimport \"./App.css\";\r\nimport Routes from \"./Routes\";\r\nimport { AppContext } from \"./libs/contextLib\";\r\nimport { Auth } from \"aws-amplify\";\r\n\r\nfunction App(Props) {\r\n  const [isAuthenticating, setIsAuthenticating] = useState(true);\r\n  const [isAuthenticated, userHasAuthenticated] = useState(false);\r\n  \r\n  useEffect(() => {\r\n    onLoad();\r\n  }, []);\r\n  \r\n  async function onLoad() {\r\n    try {\r\n      await Auth.currentSession();\r\n      userHasAuthenticated(true);\r\n    }\r\n    catch(e) {\r\n      if (e !== 'No current user') {\r\n        alert(e);\r\n      }\r\n    }\r\n  \r\n    setIsAuthenticating(false);\r\n  }\r\n\r\n  function handleLogout() {\r\n    userHasAuthenticated(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"App container\">\r\n      <Navbar fluid collapseOnSelect>\r\n        <Navbar.Header>\r\n          <Navbar.Brand>\r\n            <Link to=\"/\">Scratch</Link>\r\n          </Navbar.Brand>\r\n          <Navbar.Toggle />\r\n        </Navbar.Header>\r\n        <Navbar.Collapse>\r\n          <Nav pullRight>\r\n            {isAuthenticated\r\n              ? <NavItem onClick={handleLogout}>Logout</NavItem>\r\n              : <>\r\n                <LinkContainer to=\"/signup\">\r\n                  <NavItem>Signup</NavItem>\r\n                </LinkContainer>\r\n                <LinkContainer to=\"/login\">\r\n                  <NavItem>Login</NavItem>\r\n                </LinkContainer>\r\n              </>\r\n            }\r\n          </Nav>\r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n      <AppContext.Provider value={{ isAuthenticated, userHasAuthenticated }}>\r\n        <Routes />\r\n      </AppContext.Provider>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;"]},"metadata":{},"sourceType":"module"}